// Key bindings in this file overwrite the defaults
[
    { "key": "shift+cmd+a", "command": "editor.action.outdentLines", "when": "editorTextFocus && !editorReadonly" },
    { "key": "shift+cmd+s", "command": "editor.action.indentLines", "when": "editorTextFocus && !editorReadonly" },

    { "key": "alt+cmd+left",      "command": "cursorWordPartLeft", "when": "textInputFocus" },
    { "key": "alt+cmd+right",     "command": "cursorWordPartRight", "when": "textInputFocus" },
    { "key": "alt+cmd+backspace", "command": "deleteWordPartLeft", "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+cmd+delete",    "command": "deleteWordPartRight", "when": "textInputFocus && !editorReadonly" },

    { "key": "cmd+\\",                   "command": "macros.deleteWord", "when": "editorTextFocus" },
    { "key": "shift+backspace",          "command": "macros.deleteEolCharacter", "when": "editorTextFocus" },
    { "key": "shift+cmd+backspace",      "command": "macros.deleteLineLeft", "when": "editorTextFocus" },
    { "key": "shift+cmd+delete",         "command": "macros.deleteLineRight", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+backspace", "command": "macros.deleteLineAll", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+delete",    "command": "macros.deleteUntilEolCharacter", "when": "editorTextFocus" },
    { "key": "shift+delete",             "command": "macros.deleteStartOfLineCharacter", "when": "textInputFocus && !editorReadonly" },
    { "key": "shift+alt+delete",         "command": "macros.deleteStartOfLineWord", "when": "textInputFocus && !editorReadonly" },
    { "key": "cmd+'",                    "command": "macros.eolSemicolon", "when": "editorTextFocus" },
    { "key": "cmd+;",                    "command": "macros.eolColon", "when": "editorTextFocus" },
    { "key": "cmd+,",                    "command": "macros.eolComma", "when": "editorTextFocus" },
    { "key": "cmd+.",                    "command": "macros.eolPeriod", "when": "editorTextFocus" },
    { "key": "ctrl+cmd+[",               "command": "macros.eolBrackets", "when": "editorTextFocus" },
    { "key": "shift+cmd+'",              "command": "macros.goToTwoCharactersFromEnd", "when": "editorTextFocus" },
    { "key": "ctrl+cmd+/",               "command": "macros.insertCommentOnNewLine", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+/",         "command": "macros.insertCommentToDoOnNewLine", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+i",         "command": "macros.insertCommentToDoImplementOnNewLine", "when": "editorTextFocus" },
    { "key": "shift+cmd+r",              "command": "macros.insertReturnStatement", "when": "editorTextFocus" },
    { "key": "shift+cmd+c",              "command": "macros.insertConsoleLog", "when": "editorTextFocus" },
    { "key": "alt+cmd+c",                "command": "macros.insertClassAttribute", "when": "editorTextFocus" },
    { "key": "ctrl+c",                   "command": "macros.insertClassNameAttribute", "when": "editorTextFocus" },
    { "key": "shift+cmd+k",              "command": "macros.insertCreateAttribute", "when": "editorTextFocus" },
    { "key": "shift+cmd+j",              "command": "macros.insertDenoTest", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+j",         "command": "macros.insertDenoTestAsync", "when": "editorTextFocus" },
    { "key": "shift+cmd+k",              "command": "macros.insertDenoTestStepAsync", "when": "editorTextFocus" },
    { "key": "shift+cmd+=",              "command": "macros.insertLambdaFunction", "when": "editorTextFocus" },
    { "key": "ctrl+shift+]",             "command": "macros.insertMappingText", "when": "editorTextFocus" },
    { "key": "ctrl+cmd+space",           "command": "macros.insertPaddingSpaces", "when": "editorTextFocus" },
    { "key": "ctrl+shift+/",             "command": "macros.insertRepeatableBlockComment", "when": "editorTextFocus" },
    { "key": "ctrl+n",                   "command": "macros.insertRegionTag", "when": "editorTextFocus" },
    { "key": "ctrl+shift+n",             "command": "macros.insertEndRegionTag", "when": "editorTextFocus" },
    { "key": "cmd+i cmd+m",              "command": "macros.insertImportStatement", "when": "editorTextFocus" },
    { "key": "cmd+i cmd+d",              "command": "macros.insertFormatterIgnoreDeno", "when": "editorTextFocus" },
    { "key": "cmd+i cmd+p",              "command": "macros.insertFormatterIgnorePrettier", "when": "editorTextFocus" },
    { "key": "ctrl+cmd+j",               "command": "macros.insertTwigCodeSnippet", "when": "editorTextFocus" },
    { "key": "ctrl+shift+cmd+[",         "command": "macros.insertTwigInterpolationSnippet", "when": "editorTextFocus" },
    { "key": "alt+cmd+i",                "command": "macros.newLineAbove", "when": "editorTextFocus" },
    { "key": "alt+cmd+n",                "command": "macros.newLineBelow", "when": "editorTextFocus" },
    { "key": "ctrl+[",                   "command": "macros.insertMarkdownCheckbox", "when": "editorTextFocus" },
    { "key": "shift+alt+d",             "command": "macros.insertAstroComment", "when": "editorTextFocus" },
    { "key": "ctrl+shift+a",             "command": "macros.insertAstroPropsAssignment", "when": "editorTextFocus" },

    { "key": "ctrl+shift+up",            "command": "editorScroll", "args": { "to": "up", "by": "line" } },
    { "key": "ctrl+shift+down",          "command": "editorScroll", "args": { "to": "down", "by": "line" } },

    { "key": "cmd+0",                    "command": "editor.debug.action.toggleBreakpoint", "when": "debuggersAvailable && editorTextFocus" },
    { "key": "cmd+numpad0",              "command": "editor.debug.action.toggleBreakpoint", "when": "debuggersAvailable && editorTextFocus" },

    { "key": "cmd+1",            "command": "workbench.action.openEditorAtIndex1" },
    { "key": "cmd+2",            "command": "workbench.action.openEditorAtIndex2" },
    { "key": "cmd+3",            "command": "workbench.action.openEditorAtIndex3" },
    { "key": "cmd+4",            "command": "workbench.action.openEditorAtIndex4" },
    { "key": "cmd+5",            "command": "workbench.action.openEditorAtIndex5" },

    { "key": "cmd+k cmd+d",      "command": "git.closeAllDiffEditors" },
    { "key": "cmd+k cmd+e",      "command": "workbench.action.closeOtherEditors" },
    { "key": "cmd+k cmd+r",      "command": "workbench.action.closeEditorsToTheRight" },
    { "key": "cmd+k cmd+l",      "command": "workbench.action.closeEditorsToTheLeft" },
    { "key": "ctrl+ctrl+z",     "command": "workbench.action.toggleTabsVisibility" },
    { "key": "cmd+t",            "command": "workbench.action.terminal.toggleTerminal" },
    { "key": "shift+cmd+1",      "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
    { "key": "shift+cmd+2",      "command": "workbench.action.terminal.new", "when": "terminalProcessSupported || terminalWebExtensionContributedProfile" },
    { "key": "shift+alt+1",      "command": "workbench.action.terminal.sendSequence", "args": {"text": "cd '${fileDirname}'\u000D"}, "when": "terminalFocus" },
    { "key": "shift+alt+3",      "command": "workbench.action.terminal.kill", "when": "terminalFocus" },
    { "key": "ctrl+cmd+a",       "command": "workbench.action.toggleCenteredLayout" },
    { "key": "ctrl+shift+cmd+s", "command": "workbench.action.toggleStatusbarVisibility" },
    { "key": "ctrl+cmd+c",       "command": "workbench.files.action.collapseExplorerFolders" },
    { "key": "ctrl+cmd+e",       "command": "workbench.files.action.showActiveFileInExplorer" },
    { "key": "shift+cmd+e",      "command": "workbench.view.explorer" },
    { "key": "shift+cmd+g",      "command": "workbench.view.scm" },
    { "key": "shift+cmd+d",      "command": "workbench.view.debug" },

    { "key": "shift+alt+cmd+c",       "command": "copyFilePath",         "when": "!editorFocus" },
    { "key": "cmd+k shift+alt+cmd+c", "command": "copyFilePath",         "when": "editorFocus" },
    { "key": "shift+cmd+c",             "command": "copyRelativeFilePath", "when": "!editorTextFocus" },
    { "key": "cmd+k alt+cmd+c",       "command": "copyRelativeFilePath", "when": "editorFocus" },

    { "key": "shift+cmd+-", "command": "breadcrumbs.toggle" },

    { "key": "cmd+g",            "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
    { "key": "cmd+d",            "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },
    { "key": "cmd+e",            "command": "editor.action.deleteLines", "when": "textInputFocus && !editorReadonly" },
    { "key": "shift+cmd+l",      "command": "editor.action.insertCursorAtEndOfEachLineSelected", "when": "editorTextFocus" },
    { "key": "shift+enter",      "command": "editor.action.insertLineAfter", "when": "editorTextFocus && !editorReadonly" },
    { "key": "cmd+j",            "command": "editor.action.joinLines", "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+.",           "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
    { "key": "shift+cmd+m",      "command": "editor.action.rename", "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
    { "key": "cmd+enter",        "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "shift+cmd+i",      "command": "editor.action.selectHighlights", "when": "editorFocus" },
    { "key": "ctrl+shift+cmd+]", "command": "editor.action.selectToBracket", "when": "editorTextFocus" },
    { "key": "ctrl+cmd+z",       "command": "editor.action.transformToLowercase", "when": "editorFocus" },
    { "key": "ctrl+cmd+x",       "command": "editor.action.transformToUppercase", "when": "editorFocus" },
    { "key": "ctrl+i",           "command": "editor.action.triggerSuggest", "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly" },




    // Debugger -------------------------------------------------------------------------
    /*/
    { "key": "f9",                   "command": "workbench.action.debug.continue",
                                        "when": "inDebugMode" },
    { "key": "shift+f9",             "command": "workbench.action.debug.restart",
                                        "when": "inDebugMode" },
    { "key": "f5",                   "command": "workbench.action.debug.start",
                                        "when": "!inDebugMode" },
    { "key": "shift+f2",             "command": "workbench.action.debug.stop",
                                        "when": "inDebugMode" },
    { "key": "f7",                   "command": "workbench.action.debug.stepInto",
                                        "when": "inDebugMode" },
    { "key": "shift+f7",             "command": "workbench.action.debug.stepOut",
                                        "when": "inDebugMode" },
    { "key": "f8",                   "command": "workbench.action.debug.stepOver",
                                        "when": "inDebugMode" },
    { "key": "alt+numpad0",          "command": "editor.debug.action.toggleBreakpoint",
                                        "when": "editorTextFocus" },
    { "key": "shift+alt+0",          "command": "editor.debug.action.toggleColumnBreakpoint",
                                        "when": "editorTextFocus" },

    // Editor -------------------------------------------------------------------------
    { "key": "shift+alt+2",          "command": "merge-conflict.previous",
                                        "when": "editorTextFocus" },
    { "key": "shift+alt+3",          "command": "merge-conflict.next",
                                        "when": "editorTextFocus" },
    { "key": "shift+alt+w",          "command": "merge-conflict.accept.current",
                                        "when": "editorTextFocus" },
    { "key": "shift+alt+d",          "command": "merge-conflict.accept.incoming",
                                        "when": "editorTextFocus" },
    { "key": "ctrl+shift+alt+a",     "command": "merge-conflict.accept.all-current",
                                        "when": "editorTextFocus" },
    { "key": "ctrl+shift+alt+s",     "command": "merge-conflict.accept.all-incoming",
                                        "when": "editorTextFocus" },

    { "key": "alt+q",                "command": "toggleFindCaseSensitive",
                                        "when": "editorFocus" },

    { "key": "shift+alt+f",          "command": "macros.insertForEach",
                                            "when": "editorTextFocus && !editorReadonly" },

    // Macros -------------------------------------------------------------------------

    { "key": "ctrl+shift+alt+]",     "command": "macros.selectToBracketAtEndOfLine",
                                        "when": "editorTextFocus" },

    { "key": "shift+alt+c",          "command": "macros.insertConsoleLog",
                                        "when": "editorTextFocus" },

    { "key": "shift+alt+'",          "command": "macros.goToPenultimateCharacter",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+shift+j",         "command": "macros.insertJasmineTestWithAsync",
                                            "when": "editorTextFocus" },

    { "key": "ctrl+shift+alt+j",     "command": "macros.insertJasmineTestWithFakeAsync",
                                        "when": "editorTextFocus" },

    { "key": "shift+alt+j",          "command": "macros.insertJasmineTestForService",
                                        "when": "editorTextFocus" },

    { "key": "alt+m",                "command": "macros.insertThisAtStart",
                                        "when": "editorTextFocus" },

    { "key": "alt+m",                "command": "macros.insertMethodParens",
                                        "when": "editorTextFocus" },

    { "key": "shift+alt+m",          "command": "macros.insertThisAndMethodParens",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+alt+m",           "command": "macros.insertTsLintMaxLineLength",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+alt+.",           "command": "macros.insertPeriodDelayed",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+alt+e",           "command": "macros.insertExpectCall",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+shift+m",         "command": "macros.insertComponentFormGetCall",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+shift+'",         "command": "macros.insertEqualsWithQuotes",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+shift+alt+d",    "command": "macros.duplicateLineAndToggleComment",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+'",              "command": "macros.eolSemicolon",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+shift+.",        "command": "macros.eolHtmlClosingBracket",
                                       "when": "editorTextFocus" },

    { "key": "ctrl+shift+.",        "command": "macros.eolHtmlClosingBracket",
                                       "when": "editorTextFocus" },

    { "key": "alt+=",               "command": "macros.eolInsertFatArrow",
                                       "when": "editorTextFocus" },

    { "key": "ctrl+shift+=",        "command": "macros.insertLambdaFunction",
                                       "when": "editorTextFocus" },

    { "key": "shift+alt+l",         "command": "macros.insertLoopGroovy",
                                       "when": "editorTextFocus" },

    { "key": "ctrl+alt+'",          "command": "macros.wrapWordInQuotes",
                                       "when": "editorTextFocus" },

    { "key": "ctrl+shift+alt+'",    "command": "macros.wrapWordInDoubleQuotes",
                                       "when": "editorTextFocus" },

    { "key": "alt+c",                "command": "macros.selectWord",
                                        "when": "editorTextFocus" },

    { "key": "alt+d",                "command": "macros.replaceWord",
                                        "when": "editorTextFocus" },

    { "key": "ctrl+\\",              "command": "macros.deleteWord",
                                        "when": "editorTextFocus" },
    /*/
]
